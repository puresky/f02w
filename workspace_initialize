#!/bin/sh
#usage: bash workspace_initialize ~/scripts
#initializing work space verbosely.
#also updating, just type no to proceed, later should act more articulately...

#local variables set
originalpath=`pwd`
[ $1 ] || { echo "usage: bash workspace_initialize ~/scripts" ; exit 0 ;}
scriptspath=$1

echo "Customizing personal workspace ...."

if [ -d $scriptspath ] ; then
	echo "Directory scripts exists."
	while true; do 
		read -p "Do you want to check it first? (yes to exit / no to proceed): " answer
		case $answer in
			yes ) echo "Exiting ..." ; exit 0;;
			no  ) echo "Proceeding..." ;break;;
		        *   ) echo "Please answer yes or no (yes to exit / no to proceed): " ;; 
		esac
	done                      

else
	echo "The scripts directory not exists. Which do you want to creat, a directory or a link?"
        echo "Linking is recommanded, for easy maintaining."
	while true; do
		read -p "(creat/link):" answer
		case $answer in
			creat ) echo "Creating ..." ; 
				mkdir -p $scriptspath; 
				cp $originalpath/* $scriptspath/;
				break;;

			link  ) echo "Linking ..." ; 
				ln -s $originalpath  $scriptspath; 
				ls -l $scriptspath;
				break;;

			*     ) echo "Please answer creat or link: " ;;
		esac
	done
fi

read -p "Installing or Updating, yes to process, any other key(s) to exit: "
case $REPLY in
        yes ) echo "Installing or Updating ..."  ;;
        *   ) echo "Exiting ..." ; exit 0;;
esac

####For GILDAS/CLASS
if [ -f ~/.gag/init/init.class ] ; then
	echo "The file init.class already exists!"
else
	echo "Creating a symbolic link to the class initial files:"
	ln -s $scriptspath/init.class ~/.gag/init/init.class 
        ln -s $scriptspath/init.sic ~/.gag/init/init.sic
        ln -s $scriptspath/init.astro ~/.gag/init/init.astro
fi
####For GILDAS/GREG
if [ -f ~/.gag/init/init.greg ] ; then
	echo "The file init.greg already exists!"
else
	echo "Creating a symbolic link to the greg initial file:"
	ln -s $scriptspath/init.greg ~/.gag/init/init.greg
fi
ls -l --color=auto ~/.gag/init/init.*


####For IDL
#if [ -n $IDL_DIR ] ; then
#	IDL_PATH=$IDL_DIR
#else
#	if [ -f /usr/local/bin/idl ] ; then
#		IDL_PATH="/usr/local"
#	else
#		echo "IDL not installed?"
#		exit 1
#	fi
#fi
[ -n $IDL_DIR ] || [ -f /usr/local/bin/idl ] || echo "IDL not installed?" 

echo "Updating IDL software packages ...."

##AICer package
if [ ! -d $scriptspath/idl/aicer ] ; then
        read -p "AICer package not installd, yes to install, any other key(s) to continue: "
        case $REPLY in
                yes ) echo "Installing AICer package ...";
                      mkdir -p $scriptspath/idl/aicer ;
                      cd $scriptspath/idl/aicer ;
                      wget -nc https://aicer.googlecode.com/files/AICer%200.2.16.zip  ;
                      tar -zxvf AICer\ 0.2.16.zip ;
                      cd $originalpath ;;
                *   ) echo "Continue ..." ;;
        esac
fi
if [ -d $scriptspath/idl/aicer ] ; then
        printf "aicer..."
	svn checkout https://aicer.googlecode.com/svn/trunk/ $scriptspath/idl/aicer
	ls --color=auto $scriptspath/idl/aicer
fi
##CHIANTI package
if [ ! -d $scriptspath/idl/CHIANTI ] ; then
        read -p "CHIANTI package not installd, yes to install, any other key(s) to continue: "
        case $REPLY in
                yes ) echo "Installing CHIANTI package ..." ;
	              mkdir -p $scriptspath/idl/CHIANTI/data ;
                      mkdir -p $scriptspath/idl/CHIANTI/pro ;
	              cd $scriptspath/idl/CHIANTI/ ;
	              wget -nc http://www.chiantidatabase.org/download/CHIANTI_7.1.4_data.tar.gz ;
                      cd data ;
	              tar -zxvf ../CHIANTI_7.1.4_data.tar.gz  ;
                      cd - ;
                      wget -nc http://www.chiantidatabase.org/download/CHIANTI_7.1.5_pro_standalone.tar.gz ;
                      cd pro ;
                      tar -zxvf ../CHIANTI_7.1.5_pro_standalone.tar.gz              ;                       #containing coyote library
	              cd $originalpath ;
	              ls --color=auto $scriptspath/idl/CHIANTI ;;
                *   ) echo "Continue ..." ;;
        esac
 
fi
##David package
if [ ! -d $scriptspath/idl/david ] ; then
        read -p "Coyote package not installd, yes to install, any other key(s) to continue: "
        case $REPLY in
                yes ) echo "Installing coyote package ...";
                      mkdir -p $scriptspath/idl/david ;;
                *   ) echo "Continue ..." ;;
        esac
fi
if [ -d $scriptspath/idl/david ] ; then
        printf "coyote..."
	svn checkout https://idl-coyote.googlecode.com/svn/trunk/ $scriptspath/idl/david/idl-coyote-read-only
	ls --color=auto $scriptspath/idl/david/
fi
##Nasa package
if [ ! -d $scriptspath/idl/nasa ] ; then
        read -p "Nasa package not installd, yes to install, any other key(s) to continue: "
        case $REPLY in
                yes ) echo "Installing Nasa package ...";
                      mkdir -p $scriptspath/idl/nasa ;;
                *   ) echo "Continue ..." ;;
        esac
fi
if [ -d $scriptspath/idl/nasa ] ; then
        printf "nasa..."
        svn checkout https://github.com/wlandsman/IDLAstro/trunk $scriptspath/idl/nasa
	ls --color=auto $scriptspath/idl/nasa
fi
##textoidl package
if [ ! -d $scriptspath/idl/textoidl ] ; then
        read -p "textoidl package not installd, yes to install, any other key(s) to continue: "
        case $REPLY in
            yes ) echo "Installing textoidl package ...";
                  mkdir -p $scriptspath/idl/textoidl ;
	          cd $scriptspath/idl/textoidl/ ;
 	          wget -nc http://physics.mnstate.edu/craig/textoidl/textoidl-2-1-2.tar
	          tar -xvf textoidl-2-1-2.tar ;
	          cd $originalpath ;
	          ls --color=auto $scriptspath/idl/textoidl ;;
            *   ) echo "Continue ..." ;;
        esac
fi  
  

####
echo 'You need insert the followings in to the file ~/.bashrc by your own hand:'
echo '    if [ -f '"$scriptspath"'/bash_startup.sh ] ; then '
echo '  	. '"$scriptspath"'/bash_startup.sh '"$scriptspath"
echo '    else'
echo '	        echo "Cannot initialize your workspace ..."'
echo '    fi'

unset originalpath scriptspath
